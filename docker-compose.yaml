services:
  app:
    image: app:latest 
    build:
      context: .
    ports:
      - "3000:4000"
    networks:
      - app-network  
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - redis
  invoice:
    image: invoice:latest  
    build:
      context: .
    ports:
      - "3001:3001"
    networks:
      - app-network  
    volumes:
      - .:/invoice
      - /invoice/node_modules
    depends_on:
      - redis
  payment:
    image: payment:payment  
    build:
      context: .
    ports:
      - "3002:3002"
    networks:
      - app-network  
    volumes:
      - .:/payment
      - /payment/node_modules
    depends_on:
      - redis         
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network  
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - app-network
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    networks:
      - app-network  
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "my-topic:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock        
networks:
  app-network:
    driver: bridge       